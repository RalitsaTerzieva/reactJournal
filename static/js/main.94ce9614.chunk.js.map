{"version":3,"sources":["components/LoginDialog.js","components/RegisterDialog.js","services/jwt.js","services/apiService.js","redux/authSlice.js","redux/messageSlice.js","components/Header.js","components/Footer.js","components/ToastMessage.js","components/Main.js","components/LandingPage.js","services/time.js","components/LineChart.js","components/UserDashboard.js","components/Home.js","components/About.js","components/EntryForm.js","redux/entrySlice.js","components/CreateEntry.js","components/EntryDetails.js","components/EditEntry.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["validationSchema","yup","email","required","password","min","LoginDialog","open","onClose","onSubmit","loginError","useSelector","state","auth","formik","useFormik","initialValues","Dialog","DialogTitle","handleSubmit","DialogContent","severity","sx","mb","DialogContentText","TextField","fullWidth","margin","id","name","label","value","values","onChange","handleChange","error","touched","Boolean","errors","helperText","autoFocus","type","DialogActions","Button","style","backgroundColor","variant","onClick","first_name","last_name","passwordConfirmation","oneOf","RegisterDialog","registerError","parseJwt","token","JSON","parse","atob","split","e","setLocalJwt","localStorage","setItem","baseUrl","postData","a","url","data","headers","method","request","mode","referrerPolicy","cache","includes","body","stringify","fetch","response","apiService","getItem","login","userData","json","ok","message","user","register","createEntry","getEntries","getEntry","entryId","deleteEntry","undefined","updateEntry","entryData","getStats","createAsyncThunk","userFormData","thunkAPI","actions","resetForm","authSlice","createSlice","initialState","loginVisible","getLocalJwt","registerVisible","reducers","setLoginVisible","action","payload","logout","setRegisterVisible","extraReducers","builder","addCase","fulfilled","messageSlice","messageOpen","autoHideDuration","showMessage","duration","hideMessage","Header","dispatch","useDispatch","navigate","useNavigate","Box","flexGrow","AppBar","position","Toolbar","IconButton","edge","color","aria-label","mr","href","Stack","direction","spacing","alignItems","Typography","logoutMessage","Footer","width","height","bottom","display","justifyContent","Date","getFullYear","Alert","React","props","ref","elevation","ToastMessage","handleClose","Snackbar","anchorOrigin","horizontal","vertical","Main","children","useEffect","document","getElementsByTagName","setAttribute","LandingPage","useState","userCount","entryCount","stats","setStats","statsData","fetchData","className","title","src","frameBorder","allowFullScreen","component","Card","opacity","p","borderRadius","CardContent","CardActions","size","convertNumToTime","number","sign","hour","Math","floor","decpart","round","minute","length","convertTimeToNum","time","int_format","match","time_format","minute_string_format","toLowerCase","hour_string_format","parseInt","parseFloat","toFixed","LineChart","dataKey","tooltipFormatter","ResponsiveContainer","CartesianGrid","strokeDasharray","Tooltip","formatter","Legend","Line","stroke","strokeWidth","activeDot","r","dot","isAnimationActive","useStyles","makeStyles","theme","root","outline","UserDashboard","entries","setEntries","pageSize","setPageSize","confirm","useConfirm","classes","entriesRows","map","item","wc","sleep","weight","workout","columns","field","headerName","align","valueFormatter","params","format","flex","sortable","renderCell","stopPropagation","fontSize","itemId","description","then","filter","catch","Grid","container","xs","Paper","m","slice","reverse","rows","onPageSizeChange","newPageSize","rowsPerPageOptions","onRowClick","event","row","pagination","autoHeight","disableSelectionOnClick","Home","minHeight","marginTop","About","ml","textAlign","frameborder","scrolling","marginheight","marginwidth","date","topic","EntryForm","readonly","toString","symptoms","breakfast","lunch","snack","dinner","enableReinitialize","lg","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","val","setFieldValue","toISOString","renderInput","readOnly","InputLabelProps","shrink","InputProps","multiline","inputProps","step","max","endAdornment","InputAdornment","Number","target","FormControlLabel","control","Switch","disabled","checked","entrySlice","createError","updateError","CreateEntry","entry","EntryDetails","setEntry","useParams","EditEntry","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","authReducer","entryReducer","messageReducer","ReactDOM","render","StrictMode","store","getElementById"],"mappings":"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","file":"static/js/main.94ce9614.chunk.js","sourcesContent":["import * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport Alert from '@mui/material/Alert';\n\nimport { useSelector } from 'react-redux';\n\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n});\n\nexport const LoginDialog = ({ open, onClose, onSubmit }) => {\n  const loginError = useSelector((state) => state.auth.loginError);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Login</DialogTitle>\n      <form onSubmit={formik.handleSubmit}>\n        <DialogContent>\n          {loginError && <Alert severity=\"error\" sx={{ mb: 2 }}>{loginError}</Alert>}\n          <DialogContentText>\n            To login to this website, please enter your email address and password here. We\n            will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            autoFocus\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n        </DialogContent>\n        <DialogActions sx={{mb: 2}}>\n          <Button style={{ backgroundColor: \"#BAE3D1\" }} variant=\"contained\" type=\"submit\">\n            Login\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </DialogActions>\n      </form>\n    </Dialog>)\n}","import * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport Alert from '@mui/material/Alert';\n\nimport { useSelector } from 'react-redux'\n\n\nconst validationSchema = yup.object({\n  first_name: yup\n    .string('Enter your first name')\n    .min(2)\n    .required('First name is required'),\n  last_name: yup\n    .string('Enter your last name')\n    .min(2)\n    .required('Last name is required'),\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be of minimum 6 characters length')\n    .required('Password is required'),\n  passwordConfirmation: yup.string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match').required('Passwords must match')\n});\n\n\nexport const RegisterDialog = ({ open, onClose, onSubmit }) => {\n  const registerError = useSelector((state) => state.auth.registerError);\n\n  const formik = useFormik({\n    initialValues: {\n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n    },\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n  });\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Register</DialogTitle>\n      <form onSubmit={formik.handleSubmit}>\n        <DialogContent>\n        {registerError && <Alert severity=\"error\" sx={{ mb: 2 }}>{registerError}</Alert>}\n          <DialogContentText>\n            To register to this website, please enter your email address and password here. We\n            will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"first_name\"\n            name=\"first_name\"\n            label=\"First name\"\n            value={formik.values.first_name}\n            onChange={formik.handleChange}\n            error={formik.touched.first_name && Boolean(formik.errors.first_name)}\n            helperText={formik.touched.first_name && formik.errors.first_name}\n            autoFocus\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"last_name\"\n            name=\"last_name\"\n            label=\"Last name\"\n            value={formik.values.last_name}\n            onChange={formik.handleChange}\n            error={formik.touched.last_name && Boolean(formik.errors.last_name)}\n            helperText={formik.touched.last_name && formik.errors.last_name}\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n          <TextField\n            fullWidth\n            margin=\"dense\"\n            id=\"passwordConfirmation\"\n            name=\"passwordConfirmation\"\n            label=\"Confirm password\"\n            type=\"password\"\n            value={formik.values.passwordConfirmation}\n            onChange={formik.handleChange}\n            error={formik.touched.passwordConfirmation && Boolean(formik.errors.passwordConfirmation)}\n            helperText={formik.touched.passwordConfirmation && formik.errors.passwordConfirmation}\n          />\n        </DialogContent>\n        <DialogActions sx={{mb: 2}}>\n          <Button style={{ backgroundColor: \"#BAE3D1\" }} variant=\"contained\" type=\"submit\">\n            Register\n          </Button>\n          <Button onClick={onClose}>Cancel</Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  )\n}","const parseJwt = (token) => {\n    try {\n      return JSON.parse(atob(token.split('.')[1]));\n    } catch (e) {\n      return null;\n    }\n  };\n\nconst getLocalJwt = () => {\n    const token = localStorage.getItem(\"token\");\n    const user = token && parseJwt(token);\n    return {\n        'token': token,\n        'user': user,\n    }\n}\n\nconst setLocalJwt = (token) => {\n    localStorage.setItem(\"token\", token);\n}\n\nexport { parseJwt, getLocalJwt, setLocalJwt };","import { parseJwt } from './jwt'\n\nconst baseUrl = \"https://react-journal-app.herokuapp.com\"\nasync function postData(url = '', data = {}, headers = {}, method = 'POST') {\n    let request = {\n        method: method || 'POST',\n        mode: 'cors', // no-cors, *cors, same-origin\n        referrerPolicy: 'no-referrer',\n        cache: 'no-cache',\n        headers: {\n            'Content-Type': 'application/json',\n            ...headers\n        },\n    }\n\n    if(['POST', 'PUT'].includes(request.method)) {\n        request.body = JSON.stringify(data);\n    }\n    const response = await fetch(`${baseUrl}${url}`, request);\n    return response; // parses JSON response into native JavaScript objects\n}\n\nconst apiService = {\n    get headers() {\n        const token = localStorage.getItem('token')\n        return {\n            'Authorization': `Bearer ${token}`\n        }\n    },\n    async login(userData) {\n        const response = await postData('/login', userData);\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return {user: parseJwt(data.token), ...data}\n        }\n    },\n    async register(userData) {\n        const response = await postData('/register', userData);\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return {user: parseJwt(data.token), ...data}\n        }\n    },\n    async createEntry(userData) {\n        const response = await postData('/entries', userData, this.headers);\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n    async getEntries() {\n        const response = await postData('/entries', {}, this.headers, 'GET');\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n    async getEntry(entryId) {\n        const response = await postData(`/entries/${entryId}`, {}, this.headers, 'GET');\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n    async deleteEntry(entryId) {\n        const response = await postData(`/entries/${entryId}`, undefined, this.headers, 'DELETE');\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n    async updateEntry(entryId, entryData) {\n        const response = await postData(`/entries/${entryId}`, entryData, this.headers, 'PUT');\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n    async getStats() {\n        const response = await postData(\"/stats\", {}, this.headers, 'GET');\n        const data = await response.json();\n        if(!response.ok) {\n            return {\n                error: await data.message\n            }\n        } else {\n            return data\n        }\n    },\n}\n\nexport { apiService };","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { apiService } from '../services/apiService'\nimport { getLocalJwt, setLocalJwt } from '../services/jwt'\n\nconst login = createAsyncThunk(\n    'users/login',\n    async (userFormData, thunkAPI) => {\n      const response = await apiService.login(userFormData.values); // Submit the user login data\n\n      if(!response.error) {\n        userFormData.actions.resetForm() // Use formik actions callback to clean form data when server returns no errors\n      }  \n\n      return response\n    }\n  )\n\n  const register = createAsyncThunk(\n    'users/register',\n    async (userFormData, thunkAPI) => {\n      const response = await apiService.register(userFormData.values); // Submit the user login data\n\n      if(!response.error) {\n        userFormData.actions.resetForm() // Use formik actions callback to clean form data when server returns no errors\n      }  \n\n      return response\n    }\n  )\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    loginError: null,\n    loginVisible: false,\n    ...getLocalJwt(),\n    registerError: null,\n    registerVisible: false,\n  },\n  reducers: {\n    setLoginVisible: (state, action) => {\n      state.loginVisible = action.payload\n    },\n    logout: state => {\n      setLocalJwt(null);\n      state.user = null;\n      state.token = null;\n    },\n    setRegisterVisible: (state, action) => {\n      state.registerVisible = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(login.fulfilled, (state, action) => {\n        if (action.payload.error) {\n          state.loginError = action.payload.error;\n        } else {\n          state.loginError = null;\n          state.token = action.payload.token;\n          state.user = action.payload.user;\n          setLocalJwt(state.token);\n          state.loginVisible = false;\n        }\n    })\n\n    builder.addCase(register.fulfilled, (state, action) => {\n      if (action.payload.error) {\n        state.registerError = action.payload.error;\n      } else {\n        state.registerError = null;\n        state.token = action.payload.token;\n        state.user = action.payload.user;\n        setLocalJwt(state.token);\n        state.registerVisible = false;\n      }\n  })\n  }\n})\n\nexport const { setLoginVisible, logout, setRegisterVisible } = authSlice.actions\nexport { login, register };\n\nexport default authSlice.reducer","import { createSlice } from '@reduxjs/toolkit'\n\nexport const messageSlice = createSlice({\n  name: 'message',\n  initialState: {\n    message: null,\n    messageOpen: null,\n    severity: 'success',\n    autoHideDuration: 6000,\n  },\n  reducers: {\n    showMessage: (state, action) => {\n        state.message = action.payload.message;\n        state.messageOpen = true;\n        state.severity = action.payload.severity || 'success';\n        state.autoHideDuration = action.payload.duration || 6000;\n    },\n    hideMessage: state => {\n        state.messageOpen = false;\n    }\n  },\n})\n\nexport const { showMessage, hideMessage } = messageSlice.actions\n\nexport default messageSlice.reducer","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport HomeIcon from '@mui/icons-material/Home';\nimport Button from '@mui/material/Button';\nimport Stack from '@mui/material/Stack';\n\nimport { LoginDialog } from './LoginDialog';\nimport { RegisterDialog } from './RegisterDialog';\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { login, logout, setLoginVisible, setRegisterVisible, register } from '../redux/authSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { showMessage } from '../redux/messageSlice';\n\nconst Header = () => {\n  const loginVisible = useSelector((state) => state.auth.loginVisible);\n  const user = useSelector((state) => state.auth.user);\n  const registerVisible = useSelector((state) => state.auth.registerVisible);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleClickOpenLogin = () => {\n    dispatch(setLoginVisible(true));\n  };\n\n  const handleCloseLogin = () => {\n    dispatch(setLoginVisible(false));\n  };\n\n  const handleClickOpenRegister= () => {\n    dispatch(setRegisterVisible(true));\n  };\n\n  const handleCloseRegister = () => {\n    dispatch(setRegisterVisible(false));\n  };\n\n  \n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar style={{backgroundColor: \"#BAE3D1\"}} position=\"static\">\n        <Toolbar variant=\"dense\">\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" sx={{ mr: 2 }} href=\"/\">\n            <HomeIcon />\n          </IconButton>\n          \n          <Box sx={{ flexGrow: 1 }}></Box>\n          <Stack direction=\"row\" spacing={2} alignItems=\"center\">\n            {user && <Typography color=\"inherit\">Welcome, {user.first_name} {user.last_name}</Typography>}\n            <Button color=\"inherit\" href=\"/about\">\n              About\n            </Button>\n            {!user && <Button color=\"inherit\" onClick={handleClickOpenLogin}>Login</Button>}\n            {!user && <Button color=\"inherit\" onClick={handleClickOpenRegister}>Register</Button>}\n            {user && <Button color=\"inherit\" href=\"/entries/create\">Create Entry</Button>}\n            {user && <Button color=\"inherit\" onClick={\n              async () => {\n                const logoutMessage = `Goodbye, ${user.first_name}`;\n                await dispatch(logout())\n                navigate(\"/\")\n                dispatch(showMessage({\n                  message: logoutMessage,\n                  duration: 3000,\n                }))\n              }\n              }>Log out</Button>}\n          </Stack>\n        </Toolbar>\n      </AppBar>\n\n      <LoginDialog open={loginVisible} onClose={handleCloseLogin} onSubmit={(values, actions) => dispatch(login({values, actions}))}></LoginDialog>\n      <RegisterDialog open={registerVisible} onClose={handleCloseRegister} onSubmit={(values, actions) => dispatch(register({values, actions}))}></RegisterDialog>\n    </Box>\n  );\n}\n\nexport default Header;","import CopyrightIcon from '@mui/icons-material/Copyright';\nimport Stack from '@mui/material/Stack';\nimport Box from '@mui/material/Box';\n\nconst Footer = () => {\n    return (\n        <Box style={{backgroundColor: \"#BAE3D1\", width: '100%', height: \"48px\", position: 'fixed', bottom: 0, display: 'flex', justifyContent: 'center', alignItems: \"center\"}}>\n            <Stack direction=\"row\" alignItems=\"center\" sx={{color: \"#fff\"}}>\n                <CopyrightIcon/> ReactJournal {new Date().getFullYear()} \n            </Stack>\n        </Box>\n    );\n};\n\nexport default Footer;","import * as React from 'react';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { hideMessage } from '../redux/messageSlice';\n\nconst Alert = React.forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\nconst ToastMessage = () => {\n    const message = useSelector((state) => state.message);\n    const dispatch = useDispatch();\n    const handleClose = () => dispatch(hideMessage())\n\n    return <Snackbar open={message.messageOpen} autoHideDuration={message.autoHideDuration} onClose={handleClose}  anchorOrigin={{horizontal: \"center\", vertical: \"top\"}} sx={{width: '95vw'}}>\n        <Alert onClose={handleClose} severity={message.severity} sx={{ width: '100%' }}>\n            {message.message}\n        </Alert>\n    </Snackbar>\n}\n\nexport default ToastMessage","import Box from '@mui/material/Box';\n\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport ToastMessage from '../components/ToastMessage';\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux'\n\nconst Main = ({children}) => {\n    const user = useSelector((state) => state.auth.user);\n\n    useEffect(() => {\n        if(user) {\n            document.getElementsByTagName('html')[0].setAttribute(\"style\", \"background: url('/images/notebook.jpg') no-repeat center center fixed; background-size: cover;\");\n        } else {\n            document.getElementsByTagName('html')[0].setAttribute(\"style\", \"background: url('/images/background.png') no-repeat center center fixed; background-size: cover;\");\n        }\n    }, [user])\n\n    return (\n        <Box>\n            <Header />\n            <ToastMessage />\n            {children}\n            <Footer />\n        </Box>\n    )\n}\n\nexport default Main;","import { Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport Box from '@mui/material/Box';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Stack from '@mui/material/Stack';\nimport { setRegisterVisible } from '../redux/authSlice';\nimport { useDispatch } from 'react-redux'\nimport { apiService } from '../services/apiService';\nimport React, { useEffect, useState } from 'react';\n\n\nconst LandingPage = () => {\n    const [stats, setStats] = useState({userCount: 0, entryCount: 0});\n    const dispatch = useDispatch();\n    \n\n    useEffect(() => {\n        async function fetchData() {\n            let statsData = await apiService.getStats();\n            setStats(statsData);\n        }\n        fetchData();\n    }, []);\n\n    return (\n        <>\n            <div className=\"vimeo-wrapper\">\n                <iframe title=\"notebook\" src=\"//player.vimeo.com/video/538703414?background=1&autoplay=1&loop=1&byline=0&title=0\"\n                    frameBorder=\"0\" allowFullScreen></iframe>\n            </div>\n            <Stack direction=\"column\" spacing={8} sx={{justifyContent: 'center', alignItems: 'center', width: '70vw'}}>\n                <Typography variant=\"h2\" sx={{color: '#fff' }}>Join <Box component=\"span\" sx={{color: \"#BAE3D1\"}}>{stats.userCount}</Box> happy users who recorded <Box component=\"span\" sx={{color: \"#BAE3D1\"}}>{stats.entryCount}</Box> days. Start tracking your life today</Typography>\n                <Card sx={{opacity: 0.8, width: \"50vw\", height: \"auto\", p: 2, borderRadius: 3}}>\n                    <CardContent>\n                        <Typography variant=\"h3\">„Health is not about the weight you lose. It's about the life you gain“</Typography>\n                    </CardContent>\n                    <CardActions sx={{ justifyContent: 'center' }}>\n                        <Button size=\"large\" variant=\"contained\" color=\"success\" onClick={() => dispatch(setRegisterVisible(true))}>Explore life here</Button>\n                    </CardActions>\n                </Card>\n            </Stack>\n            \n        </>\n    )\n}\n\nexport default LandingPage;","export function convertNumToTime(number) {\n    let sign = (number >= 0) ? 1 : -1;\n    number = number * sign;\n\n    let hour = Math.floor(number) + '';\n    let decpart = number - hour;\n\n    const min = 1 / 60;\n    // Round to nearest minute\n    decpart = min * Math.round(decpart / min);\n\n    let minute = Math.floor(decpart * 60) + '';\n\n    // Add padding if need\n    if (minute.length < 2) {\n        minute = '0' + minute; \n    }\n\n    if (hour.length < 2) {\n        hour = '0' + hour; \n    }\n\n    // Add Sign in final result\n    sign = sign === 1 ? '' : '-';\n\n    const time = sign + hour + ':' + minute;\n \n    return time;\n}\n\nexport function convertTimeToNum(time) {\n\n\t// Number of decimal places to round to\n\tconst decimal_places = 2;\n\n\t// Maximum number of hours before we should assume minutes were intended. Set to 0 to remove the maximum.\n\tconst maximum_hours = 15;\n\n\t// 3\n\tconst int_format = time.match(/^\\d+$/);\n\n\t// 1:15\n\tconst time_format = time.match(/([\\d]*):([\\d]+)/);\n\n\t// 10m\n\tconst minute_string_format = time.toLowerCase().match(/([\\d]+)m/);\n\n\t// 2h\n\tconst hour_string_format = time.toLowerCase().match(/([\\d]+)h/);\n\n    let hours, minutes;\n\n\tif (time_format != null) {\n\t\thours = parseInt(time_format[1]);\n\t\tminutes = parseFloat(time_format[2]/60);\n\t\ttime = hours + minutes;\n\t} else if (minute_string_format != null || hour_string_format != null) {\n\t\tif (hour_string_format != null) {\n\t\t\thours = parseInt(hour_string_format[1]);\n\t\t} else {\n\t\t\thours = 0;\n\t\t}\n\t\tif (minute_string_format != null) {\n\t\t\tminutes = parseFloat(minute_string_format[1]/60);\n\t\t} else {\n\t\t\tminutes = 0;\n\t\t}\n\t\ttime = hours + minutes;\n\t} else if (int_format != null) {\n\t\t// Entries over 15 hours are likely intended to be minutes.\n\t\ttime = parseInt(time);\n\t\tif (maximum_hours > 0 && time > maximum_hours) {\n\t\t\ttime = (time/60).toFixed(decimal_places);\n\t\t}\n\t}\n\n\t// make sure what ever we return is a 2 digit float\n\ttime = parseFloat(time).toFixed(decimal_places);\n\n\treturn time;\n}","import {\n  LineChart as LC,\n  Line,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer\n} from \"recharts\";\nexport const LineChart = ({ data, dataKey, tooltipFormatter }) => {\n  return <ResponsiveContainer width=\"100%\" height=\"100%\">\n    <LC data={data}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <Tooltip formatter={tooltipFormatter} />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey={dataKey}\n        stroke=\"#BAE3D1\"\n        strokeWidth={2}\n        activeDot={{ r: 8 }}\n        dot={true}\n        isAnimationActive={false}\n      />\n    </LC>\n  </ResponsiveContainer>\n}\n\nexport default LineChart;","import Grid from '@mui/material/Grid';\nimport { DataGrid } from '@mui/x-data-grid';\nimport Paper from '@mui/material/Paper';\nimport React, { useState, useEffect } from 'react';\nimport { useConfirm } from \"material-ui-confirm\";\nimport { apiService } from '../services/apiService';\nimport { convertNumToTime } from '../services/time';\nimport { format } from 'date-fns'\n\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { makeStyles } from '@mui/styles';\nimport { useNavigate } from 'react-router-dom';\n\nimport { LineChart } from './LineChart';\n\nconst useStyles = makeStyles((theme) => ({\n    root: { // disable border when focusing on datagrid cells\n        '&.MuiDataGrid-root .MuiDataGrid-cell:focus': {\n            outline: 'none',\n        },\n    }\n}));\n\nexport const UserDashboard = () => {\n    const [entries, setEntries] = useState([]);\n    const [pageSize, setPageSize] = React.useState(5);\n    const confirm = useConfirm();\n    const classes = useStyles();\n    const navigate = useNavigate();\n\n    const handleDelete = itemId => {\n        confirm({ description: `This will permanently delete entry ${itemId}.` })\n          .then(async () => {\n              await apiService.deleteEntry(itemId);\n              setEntries(entries.filter(item => item.id !== itemId)) // remove the deleted item from data to refresh table\n          })\n          .catch(() => {});\n      };\n\n    useEffect(() => {\n        async function fetchData() {\n            const entriesRows = await apiService.getEntries();\n            setEntries(entriesRows.map((item) => {\n                return {...item,\n                        wc: item.wc || 0,\n                        sleep: item.sleep || 0,\n                        weight: item.weight || 0,\n                        workout: !!item.workout,\n                    }\n            }));\n        }\n        fetchData();\n    }, []);\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 60, align: 'center' },\n        {\n            field: 'date', headerName: 'Date', width: 120, align: 'center', valueFormatter: (params) => {\n                return format(new Date(params.value), 'dd.MM.yyyy');\n            },\n        },\n        { field: 'topic', headerName: 'Topic', flex: 0.5 },\n        { field: 'description', headerName: 'Description', flex: 1 },\n        {\n            field: 'sleep', headerName: 'Sleep', width: 90, align: 'right', valueFormatter: (params) => {\n                return `${convertNumToTime(params.value || 0)} h 🕒`;\n            },\n        },\n        {\n            field: 'wc', headerName: 'WC', width: 80, align: 'right', valueFormatter: (params) => {\n                return `${params.value || 0} 🚽`;\n            },\n        },\n        {\n            field: 'weight', headerName: 'Weight', width: 100, align: 'right', valueFormatter: (params) => {\n                return `${params.value || 0} kg ⚖️`;\n            },\n        },\n        {\n            field: 'workout', headerName: 'Workout', width: 80, align: 'center', valueFormatter: (params) => {\n                if (params.value) {\n                    return '✔️'\n                } else {\n                    return '❌'\n                }\n            },\n        },\n        {\n            field: 'actions', headerName: '', flex: 0.2, align: 'center', sortable: false,\n            renderCell: (params) => {\n                return <div onClick={(e) => {e.stopPropagation() } }>\n                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                        <IconButton aria-label=\"detils\" size=\"small\" title=\"details\" href={`/entries/details/${params.id}`}>\n                            <InfoIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton aria-label=\"edit\" size=\"small\" title=\"edit\" href={`/entries/${params.id}`}>\n                            <EditIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton aria-label=\"delete\" size=\"small\" color=\"error\" title=\"delete\" onClick={() => handleDelete(params.id)}>\n                            <DeleteIcon fontSize=\"small\" />\n                        </IconButton>\n                    </Stack>\n                    \n                </div>;\n            }\n        },\n    ];\n\n    return <Grid container spacing={0}>\n        <Grid item xs={4}>\n            <Paper sx={{ m: 2, height: \"200px\", display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n                <LineChart data={entries.slice(0, 10).reverse()} dataKey='wc' />\n            </Paper>\n        </Grid>\n        <Grid item xs={4}>\n            <Paper sx={{ m: 2, height: \"200px\", display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n                <LineChart data={entries.slice(0, 10).reverse()} dataKey='weight' />\n            </Paper>\n        </Grid>\n        <Grid item xs={4}>\n            <Paper sx={{ m: 2, height: \"200px\", display: \"flex\", alignItems: 'center', justifyContent: 'center' }}>\n                <LineChart  data={entries.slice(0, 10).reverse()} dataKey='sleep' tooltipFormatter={(value, name, props) => `${convertNumToTime(value)} h`} />\n            </Paper>\n        </Grid>\n        <Grid item xs={12}>\n            <Paper sx={{ m: 2 }}>\n                <DataGrid className={classes.root} rows={entries} columns={columns} pageSize={pageSize}\n                    onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\n                    rowsPerPageOptions={[5, 10, 20]}\n                    onRowClick={(params, event) => {\n                        navigate(`/entries/details/${params.row.id}`);\n                    }}\n                    pagination autoHeight disableSelectionOnClick />\n            </Paper>\n        </Grid>\n    </Grid>\n\n}\n\nexport default UserDashboard;","import Box from '@mui/material/Box';\n\nimport Main from './Main';\nimport LandingPage from './LandingPage';\nimport UserDashboard from './UserDashboard';\nimport { useSelector } from 'react-redux'\n\nconst Home = () => {\n    const user = useSelector((state) => state.auth.user);\n\n    return (\n        <Main>\n            {user && <UserDashboard />}\n            {!user && <Box style={{minHeight: \"86vh\", marginTop: 0, display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\n                <LandingPage />\n            </Box>}\n        </Main>\n    );\n};\n\nexport default Home;","import Main from './Main';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Stack from '@mui/material/Stack';\n\nconst About = () => {\n    return (\n       <Main>\n           \n           <Paper elevation={1} sx={{\n               m: 2, \n               p: 5,\n               ml: 'auto',\n               mr: 'auto',\n               width: '60vw',\n               backgroundColor: '#FFFAFA',\n      }}>\n          <Typography variant='h4' sx={{mb: 3}}>Our mission</Typography>\n          <Stack direction=\"row\" spacing={4}>\n            <Box sx={{textAlign: 'justify'}}>\n            “Let food be the medicine and medicine be thy food.” – Hippocrates.\n    This amazing quotes defines our mission and goal. Our Journal Application is created in November 2021 to your true friend that will help you building healthy daily routine. \n    Your life will be changed. You will be happy and healthy. You just need to fullfuild every field every day and to monitor your life and progress. \n    It will help you to catch something that is not healthy for you.\n    Everyone have to ask yourself what is the most important thing. We believe that happiness come trough good lifestyle and health body and mind. We spent so many years to live healthy and to follow a daily routine that was very helpful for us.\n    Firstly we started this journey with only one notebook and pencil. Secondly it become so bigger that all of my bookshelfs was full with notebooks with information about our lifestyle. We wrote down everything and we noticed so many things about us.\n    When you start to write down your day, it becomes more and more clearer what is wrong and right for you and how are you feeling during every day. For many peaople this is a obligation but we don't think that health is just a obligation. Health is the path to everything in life.\n            </Box>\n            <Box>\n                <iframe title=\"location\" width=\"500\" height=\"400\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=Central%20park,%20New%20York&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe>\n            </Box>\n            </Stack>\n           </Paper>\n       </Main>\n    );\n};\n\nexport default About;","import * as yup from 'yup';\nimport { useFormik } from 'formik';\nimport Button from '@mui/material/Button';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport DatePicker from '@mui/lab/DatePicker';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport Alert from '@mui/material/Alert';\nimport InputAdornment from '@mui/material/InputAdornment';\n\n\nconst validationSchema = yup.object({\n    date: yup\n        .string('Enter a date')\n        .required('Date is required'),\n    description: yup\n        .string('Enter a valid description')\n        .min(20, 'Description should be of minimum 20 characters length')\n        .required('Description is required'),\n    topic: yup\n        .string('Enter a valid topic')\n        .min(5, 'Topic should be of minimum 5 characters length')\n        .required('Topic is required'),\n});\n\n\nexport const EntryForm = ({ onSubmit, error, initialValues, readonly = false }) => {\n    initialValues = initialValues || {\n        date: (new Date()).toString(),\n        description: '',\n        topic: '',\n        sleep: '',\n        wc: '',\n        weight: '',\n        workout: false,\n        symptoms: '',\n        breakfast: '',\n        lunch: '',\n        snack: '',\n        dinner: ''\n    }\n\n    const formik = useFormik({\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        enableReinitialize: true,\n    });\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            <Grid container spacing={2}>\n                {error && <Grid item xs={12}><Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert></Grid>}\n\n                <Grid item xs={12} lg={6}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DatePicker\n                            label=\"Date\"\n                            value={formik.values.date}\n                            onChange={val => { formik.setFieldValue(\"date\", val.toISOString()) }}\n                            error={formik.touched.date && Boolean(formik.errors.date)}\n                            helperText={formik.touched.date && formik.errors.date}\n                            renderInput={(params) => <TextField {...params} fullWidth margin=\"dense\" />}\n                            readOnly={readonly}\n                            autoFocus\n                        />\n                    </LocalizationProvider>\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <TextField\n                        fullWidth\n                        margin=\"dense\"\n                        id=\"topic\"\n                        name=\"topic\"\n                        label=\"Topic\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        value={formik.values.topic}\n                        onChange={formik.handleChange}\n                        error={formik.touched.topic && Boolean(formik.errors.topic)}\n                        helperText={formik.touched.topic && formik.errors.topic}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                    />\n                </Grid>\n                <Grid item xs={12} lg={12}>\n                    <TextField\n                        id=\"description\"\n                        label=\"Description\"\n                        multiline\n                        rows={4}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                        value={formik.values.description}\n                        onChange={formik.handleChange}\n                        error={formik.touched.description && Boolean(formik.errors.description)}\n                        helperText={formik.touched.description && formik.errors.description}\n                        fullWidth />\n                </Grid>\n                <Grid item xs={6} lg={3}>\n                    <TextField\n                        id=\"sleep\"\n                        label=\"Sleep\"\n                        type=\"time\"\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        inputProps={{\n                            step: 300, // 5 min\n                            readOnly: readonly,\n                        }}\n                        margin='dense'\n                        fullWidth\n                        value={formik.values.sleep}\n                        onChange={formik.handleChange}\n                        error={formik.touched.sleep && Boolean(formik.errors.sleep)}\n                    />\n                </Grid>\n                <Grid item xs={6} lg={3}>\n                    <TextField\n                        label=\"Weight\"\n                        type=\"number\"\n                        value={formik.values.weight}\n                        InputProps={{\n                            readOnly: readonly,\n                            inputProps: { min: 10, max: 300, step: '.1' },\n                            endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>\n                        }}\n                        onChange={e => { formik.setFieldValue(\"weight\", Number(e.target.value)) }}\n                        error={formik.touched.weight && Boolean(formik.errors.weight)}\n                        margin='dense'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={6} lg={3}>\n                    <TextField\n                        label=\"wc\"\n                        type=\"number\"\n                        InputProps={{\n                            readOnly: readonly,\n                            inputProps: { min: 0, max: 10, step: '1' },\n                            endAdornment: <InputAdornment position=\"end\">🚽</InputAdornment>\n                        }}\n                        value={formik.values.wc}\n                        onChange={e => { formik.setFieldValue(\"wc\", Number(e.target.value)) }}\n                        error={formik.touched.wc && Boolean(formik.errors.wc)}\n                        margin='dense'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        fullWidth\n                    />\n                </Grid>\n                <Grid item xs={6} lg={3} sx={{ alignItems: 'center', display: 'flex' }}>\n                    <FormControlLabel control={\n                        <Switch disabled={readonly} checked={formik.values.workout} value={formik.values.workout} onChange={e => { formik.setFieldValue(\"workout\", e.target.checked) }} />\n                    } label=\"Workout 🏋️\" />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <TextField\n                        id=\"breakfast\"\n                        label=\"Breakfast\"\n                        multiline\n                        rows={4}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                        value={formik.values.breakfast}\n                        onChange={formik.handleChange}\n                        error={formik.touched.breakfast && Boolean(formik.errors.breakfast)}\n                        helperText={formik.touched.breakfast && formik.errors.breakfast}\n                        fullWidth />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <TextField\n                        id=\"lunch\"\n                        label=\"Lunch\"\n                        multiline\n                        rows={4}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                        value={formik.values.lunch}\n                        onChange={formik.handleChange}\n                        error={formik.touched.lunch && Boolean(formik.errors.lunch)}\n                        helperText={formik.touched.lunch && formik.errors.lunch}\n                        fullWidth />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <TextField\n                        id=\"snack\"\n                        label=\"Snack\"\n                        multiline\n                        rows={4}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                        value={formik.values.snack}\n                        onChange={formik.handleChange}\n                        error={formik.touched.snack && Boolean(formik.errors.snack)}\n                        helperText={formik.touched.snack && formik.errors.snack}\n                        fullWidth />\n                </Grid>\n                <Grid item xs={12} lg={6}>\n                    <TextField\n                        id=\"dinner\"\n                        label=\"Dinner\"\n                        multiline\n                        rows={4}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        InputProps={{\n                            readOnly: readonly,\n                        }}\n                        value={formik.values.dinner}\n                        onChange={formik.handleChange}\n                        error={formik.touched.dinner && Boolean(formik.errors.dinner)}\n                        helperText={formik.touched.dinner && formik.errors.dinner}\n                        fullWidth />\n                </Grid>\n                {!readonly && <Grid item xs={12}>\n                    <Button style={{ backgroundColor: \"#BAE3D1\" }} variant=\"contained\" type=\"submit\" size=\"large\">\n                        Save\n                    </Button>\n                </Grid>}\n            </Grid>\n\n        </form>\n    )\n}\n\nexport default EntryForm;","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { apiService } from '../services/apiService'\n\nconst createEntry = createAsyncThunk(\n    'entries/create',\n    async (values, thunkAPI) => {\n      return await apiService.createEntry(values);\n    }\n  )\n\n  const updateEntry = createAsyncThunk(\n    'entries/update',\n    async ({id, values}, thunkAPI) => {\n      return await apiService.updateEntry(id, values);\n    }\n  )\n\nexport const entrySlice = createSlice({\n  name: 'entry',\n  initialState: {\n    createError: null,\n    updateError: null,\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(createEntry.fulfilled, (state, action) => {\n        if (action.payload.error) {\n          state.createError = action.payload.error;\n        } else {\n          state.createError = null;\n        }\n    });\n\n    builder.addCase(updateEntry.fulfilled, (state, action) => {\n      if (action.payload.error) {\n        state.updateError = action.payload.error;\n      } else {\n        state.updateError = null;\n      }\n    });\n  }\n})\n\nexport { createEntry, updateEntry };\n\nexport default entrySlice.reducer","import Main from './Main';\nimport EntryForm from './EntryForm'\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createEntry } from '../redux/entrySlice';\nimport { showMessage } from '../redux/messageSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTimeToNum } from '../services/time';\n\nconst CreateEntry = () => {\n    const error = useSelector((state) => state.entry.createError);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    return (\n        <Main>\n            <Paper elevation={1} sx={{\n                m: 2,\n                mb: 6,\n                p: 5,\n                ml: 'auto',\n                mr: 'auto',\n                width: '60vw',\n                backgroundColor: '#FFFAFA',\n            }}>\n                <Typography variant='h4' sx={{ mb: 3 }}>Create Entry</Typography>\n                <EntryForm onSubmit={async (values, actions) => {\n                    // Convert from time string to float before submit\n                    values.sleep = convertTimeToNum(values.sleep)\n\n                    const response = await dispatch(createEntry(values));\n                    if (!response.payload.error) {\n                        actions.resetForm()\n                        navigate(\"/\")\n                        dispatch(showMessage({\n                            message: `Successfully created entry ${response.payload.id}`\n                        }))\n                    }\n                }} initialValues={{\n                    date: (new Date()).toString(),\n                    description: '',\n                    topic: '',\n                    sleep: '',\n                    wc: '',\n                    weight: '',\n                    workout: false,\n                    symptoms: '',\n                    breakfast: '',\n                    lunch: '',\n                    snack: '',\n                    dinner: ''\n                }} error={error} />\n            </Paper>\n        </Main>\n    )\n}\n\nexport default CreateEntry;","import Main from './Main';\nimport EntryForm from './EntryForm'\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport React, { useEffect, useState } from 'react';\nimport { apiService } from '../services/apiService';\nimport { convertNumToTime } from '../services/time';\n\nimport { useParams } from \"react-router-dom\";\n\nconst EntryDetails = () => {\n    const [entry, setEntry] = useState();\n    const { id } = useParams();\n\n    useEffect(() => {\n        async function fetchData() {\n            let entryData = await apiService.getEntry(id);\n            entryData = {...entryData,\n                wc: entryData.wc || 0,\n                sleep: convertNumToTime(entryData.sleep || 0),\n                weight: entryData.weight || 0,\n                workout: !!entryData.workout,\n            }\n            setEntry(entryData);\n        }\n        fetchData();\n    }, [id]);\n\n    return (\n        <Main>\n            <Paper elevation={1} sx={{\n                m: 2,\n                mb: 6,\n                p: 5,\n                ml: 'auto',\n                mr: 'auto',\n                width: '60vw',\n                backgroundColor: '#FFFAFA',\n            }}>\n                <Typography variant='h4' sx={{ mb: 3 }}>Entry {entry && entry.id}</Typography>\n                <EntryForm onSubmit={()=>{}} error={null} initialValues={entry} readonly={true} />\n            </Paper>\n        </Main>\n    )\n}\n\nexport default EntryDetails;","import Main from './Main';\nimport EntryForm from './EntryForm'\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport React, { useEffect, useState } from 'react';\nimport { apiService } from '../services/apiService';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateEntry } from '../redux/entrySlice';\nimport { showMessage } from '../redux/messageSlice';\nimport { useNavigate } from 'react-router-dom';\nimport { convertTimeToNum, convertNumToTime } from '../services/time';\n\nimport { useParams } from \"react-router-dom\";\n\nconst EditEntry = () => {\n    const error = useSelector((state) => state.entry.updateError);\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [entry, setEntry] = useState();\n    const { id } = useParams();\n\n    useEffect(() => {\n        async function fetchData() {\n            let entryData = await apiService.getEntry(id);\n            entryData = {...entryData,\n                wc: entryData.wc || 0,\n                sleep: convertNumToTime(entryData.sleep || 0),\n                weight: entryData.weight || 0,\n                workout: !!entryData.workout,\n            }\n            setEntry(entryData);\n        }\n        fetchData();\n    }, [id]);\n\n    return (\n        <Main>\n            <Paper elevation={1} sx={{\n                m: 2,\n                mb: 6,\n                p: 5,\n                ml: 'auto',\n                mr: 'auto',\n                width: '60vw',\n                backgroundColor: '#FFFAFA',\n            }}>\n                <Typography variant='h4' sx={{ mb: 3 }}>Entry {entry && entry.id}</Typography>\n                <EntryForm onSubmit={async (values, actions) => {\n                    // Convert from time string to float before submit\n                    values.sleep = convertTimeToNum(values.sleep)\n\n                    const response = await dispatch(updateEntry({id, values}));\n                    if (!response.payload.error) {\n                        actions.resetForm()\n                        navigate(\"/\")\n                        dispatch(showMessage({\n                            message: `Successfully updated entry ${response.payload.id}`\n                        }))\n                    }\n                }} error={error} initialValues={entry} />\n            </Paper>\n        </Main>\n    )\n}\n\nexport default EditEntry;","import { Routes, Route } from 'react-router-dom';\n\nimport './App.css';\nimport Home from './components/Home';\nimport About from './components/About';\nimport CreateEntry from './components/CreateEntry';\nimport EntryDetails from './components/EntryDetails';\nimport EditEntry from './components/EditEntry';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/about\" element={<About />} />\n          <Route path=\"/entries/create\" element={<CreateEntry />} />\n          <Route path=\"/entries/details/:id\" element={<EntryDetails />} />\n          <Route path=\"/entries/:id\" element={<EditEntry />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './authSlice';\nimport entryReducer from './entrySlice';\nimport messageReducer from './messageSlice';\n\nexport default configureStore({\n  reducer: {\n    auth: authReducer,\n    entry: entryReducer,\n    message: messageReducer,\n  }\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { ConfirmProvider } from \"material-ui-confirm\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ConfirmProvider>\n        <Provider store={store}>\n          <App />\n        </Provider>,\n      </ConfirmProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}